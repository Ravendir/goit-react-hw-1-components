{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendList.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Profile/Profile.jsx","components/Statistics/StatisticsItem/StatisticsItem.jsx","components/Statistics/Statistics.jsx","components/FriendList/FriendListItem/FriendListItem.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistoryItem/TransactionHistoryItem.jsx","components/TransactionHistory/TransactionHistory.jsx","components/App/App.jsx","index.js"],"names":["module","exports","Profile","username","tag","location","avatar","stats","className","styles","profile","class","description","src","alt","name","statsItem","label","quantity","followers","views","likes","Statistics","percentage","statisticList","style","backgroundColor","Math","floor","random","opacity","statisticLabel","statisticPercentage","StatisticsList","title","statisticSection","statisticTitle","statisticContainer","map","stat","id","Friends","isOnline","friendsList","online","offline","friendsAvatar","friendsName","FriendList","friends","friend","defaultProps","Transactions","currency","amount","type","transactionHystoryTable","TransactionHystory","items","transactionTable","transactionThead","item","App","user","data","TransactionHistory","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,KAAO,sBAAsB,IAAM,qBAAqB,SAAW,0BAA0B,MAAQ,uBAAuB,UAAY,6B,gBCA9ND,EAAOC,QAAU,CAAC,mBAAqB,uCAAuC,iBAAmB,qCAAqC,eAAiB,mCAAmC,cAAgB,kCAAkC,oBAAsB,0C,iBCAlQD,EAAOC,QAAU,CAAC,cAAgB,kCAAkC,cAAgB,kCAAkC,YAAc,gCAAgC,YAAc,gCAAgC,OAAS,2BAA2B,QAAU,8B,0PCAhQD,EAAOC,QAAU,CAAC,iBAAmB,6CAA6C,iBAAmB,+C,g7FC0CtFC,EAxCC,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,SAAUC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MAClD,OACE,sBAAKC,UAAWC,IAAOC,QAAvB,UACE,sBAAKC,MAAOF,IAAOG,YAAnB,UACE,qBAAKC,IAAKP,EAAQQ,IAAKX,EAAUK,UAAWC,IAAOH,SACnD,mBAAGE,UAAWC,IAAOM,KAArB,SAA4BZ,IAC5B,mBAAGK,UAAWC,IAAOL,IAArB,SAA2BA,IAC3B,mBAAGI,UAAWC,IAAOJ,SAArB,SAAgCA,OAGlC,qBAAIG,UAAWC,IAAOF,MAAtB,UACE,qBAAIC,UAAWC,IAAOO,UAAtB,UACE,sBAAMR,UAAWC,IAAOQ,MAAxB,uBACA,sBAAMT,UAAWC,IAAOS,SAAxB,SAAmCX,EAAMY,eAE3C,qBAAIX,UAAWC,IAAOO,UAAtB,UACE,sBAAMR,UAAWC,IAAOQ,MAAxB,mBACA,sBAAMT,UAAWC,IAAOS,SAAxB,SAAmCX,EAAMa,WAE3C,qBAAIZ,UAAWC,IAAOO,UAAtB,UACE,sBAAMR,UAAWC,IAAOQ,MAAxB,mBACA,sBAAMT,UAAWC,IAAOS,SAAxB,SAAmCX,EAAMc,kB,uBCGpCC,EAxBI,SAAC,GAA2B,IAAzBL,EAAwB,EAAxBA,MAAOM,EAAiB,EAAjBA,WAQ3B,OACE,qBACEf,UAAWC,IAAOe,cAClBC,MAAO,CAAEC,gBATL,eAAN,OACIC,KAAKC,MAAsB,IAAhBD,KAAKE,UADpB,oBAEIF,KAAKC,MAAsB,IAAhBD,KAAKE,UAFpB,oBAGIF,KAAKC,MAAsB,IAAhBD,KAAKE,UAHpB,aAS2CC,QAAS,IAFpD,UAIE,sBAAMtB,UAAWC,IAAOsB,eAAxB,SAAyCd,IACzC,uBAAMT,UAAWC,IAAOuB,oBAAxB,UAA8CT,EAA9C,WCGSU,EAhBQ,SAAC,GAAD,IAAG1B,EAAH,EAAGA,MAAO2B,EAAV,EAAUA,MAAV,OACrB,0BAAS1B,UAAWC,IAAO0B,iBAA3B,UACGD,GAAS,oBAAI1B,UAAWC,IAAO2B,eAAtB,SAAuCF,IAEjD,oBAAI1B,UAAWC,IAAO4B,mBAAtB,SACG9B,EAAM+B,KAAI,SAACC,GAAD,OACT,cAAC,EAAD,eAA6BA,GAAbA,EAAKC,a,gBCYdC,EAnBC,SAAC,GAAoC,IAAlCnC,EAAiC,EAAjCA,OAAQS,EAAyB,EAAzBA,KAAM2B,EAAmB,EAAnBA,SAAUF,EAAS,EAATA,GACzC,OACE,qBAAIhC,UAAWC,IAAOkC,YAAtB,UACE,sBAAMnC,UAAWkC,EAAWjC,IAAOmC,OAASnC,IAAOoC,QAAnD,SACGH,IAEH,qBAAKlC,UAAWC,IAAOqC,cAAejC,IAAKP,EAAQQ,IAAKC,IACxD,mBAAGP,UAAWC,IAAOsC,YAArB,SAAmChC,MALGyB,ICFtCQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACjB,6BACGA,EAAQX,KAAI,SAACY,GAAD,OACX,cAAC,EAAD,eAA6BA,GAAfA,EAAOV,UAQ3BQ,EAAWG,aAAe,CACxB7C,OAAQ,yDAGK0C,Q,gBCIAI,EAnBM,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,KAAMf,EAAS,EAATA,GAC9C,OACE,gCACE,qBAAahC,UAAWC,IAAO+C,wBAA/B,UACE,6BAAKD,IACL,6BAAKD,IACL,6BAAKD,MAHEb,MCiBAiB,EAnBY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACzB,wBAAOlD,UAAWC,IAAOkD,iBAAzB,UACE,uBAAOnD,UAAWC,IAAOmD,iBAAzB,SACE,+BACE,sCACA,wCACA,+CAGHF,EAAMpB,KAAI,SAACuB,GAAD,OACT,cAAC,EAAD,eAA+BA,GAAbA,EAAKrB,W,+BCadsB,G,MAhBH,WACV,OACE,qCACE,cAAC,EAAD,CACE3D,SAAU4D,EAAK5D,SACfC,IAAK2D,EAAK3D,IACVC,SAAU0D,EAAK1D,SACfC,OAAQyD,EAAKzD,OACbC,MAAOwD,EAAKxD,QAEd,cAAC,EAAD,CAAY2B,MAAM,eAAe3B,MAAOyD,IACxC,cAAC,EAAD,CAAYf,QAASA,IACrB,cAACgB,EAAD,CAAoBP,MAAOQ,SCnBjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d9721908.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__33N1N\",\"avatar\":\"Profile_avatar__2jGyI\",\"name\":\"Profile_name__3y936\",\"tag\":\"Profile_tag__16V7e\",\"location\":\"Profile_location__1QD9D\",\"stats\":\"Profile_stats__1nmZZ\",\"statsItem\":\"Profile_statsItem__1aMsL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticContainer\":\"Statistics_statisticContainer__1Wc-l\",\"statisticSection\":\"Statistics_statisticSection__2e_od\",\"statisticTitle\":\"Statistics_statisticTitle__1_dXZ\",\"statisticList\":\"Statistics_statisticList__3K_Rj\",\"statisticPercentage\":\"Statistics_statisticPercentage__2z9-E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendsAvatar\":\"FriendList_friendsAvatar__3e3l1\",\"friendsStatus\":\"FriendList_friendsStatus__1Q4Gt\",\"friendsList\":\"FriendList_friendsList__nk6D9\",\"friendsName\":\"FriendList_friendsName__1f6De\",\"online\":\"FriendList_online__1pWLo\",\"offline\":\"FriendList_offline___hlaG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionTable\":\"TransactionHistory_transactionTable__2LDgk\",\"transactionThead\":\"TransactionHistory_transactionThead__2n0B9\"};","import PropTypes from \"prop-types\";\r\nimport styles from \"./Profile.module.css\";\r\n\r\nconst Profile = ({ username, tag, location, avatar, stats }) => {\r\n  return (\r\n    <div className={styles.profile}>\r\n      <div class={styles.description}>\r\n        <img src={avatar} alt={username} className={styles.avatar} />\r\n        <p className={styles.name}>{username}</p>\r\n        <p className={styles.tag}>{tag}</p>\r\n        <p className={styles.location}>{location}</p>\r\n      </div>\r\n\r\n      <ul className={styles.stats}>\r\n        <li className={styles.statsItem}>\r\n          <span className={styles.label}>Followers</span>\r\n          <span className={styles.quantity}>{stats.followers}</span>\r\n        </li>\r\n        <li className={styles.statsItem}>\r\n          <span className={styles.label}>Views</span>\r\n          <span className={styles.quantity}>{stats.views}</span>\r\n        </li>\r\n        <li className={styles.statsItem}>\r\n          <span className={styles.label}>Likes</span>\r\n          <span className={styles.quantity}>{stats.likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  username: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n  }),\r\n};\r\n\r\nexport default Profile;\r\n","import styles from \"../Statistics.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Statistics = ({ label, percentage }) => {\r\n  function randomColor() {\r\n    return `rgb(\r\n      ${Math.floor(Math.random() * 255)},\r\n      ${Math.floor(Math.random() * 255)},\r\n      ${Math.floor(Math.random() * 255)})\r\n      `;\r\n  }\r\n  return (\r\n    <li\r\n      className={styles.statisticList}\r\n      style={{ backgroundColor: randomColor(), opacity: 0.5 }}\r\n    >\r\n      <span className={styles.statisticLabel}>{label}</span>\r\n      <span className={styles.statisticPercentage}>{percentage}%</span>\r\n    </li>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  percentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import Statistic from \"./StatisticsItem/StatisticsItem\";\r\nimport styles from \"./Statistics.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst StatisticsList = ({ stats, title }) => (\r\n  <section className={styles.statisticSection}>\r\n    {title && <h2 className={styles.statisticTitle}>{title}</h2>}\r\n\r\n    <ul className={styles.statisticContainer}>\r\n      {stats.map((stat) => (\r\n        <Statistic key={stat.id} {...stat} />\r\n      ))}\r\n    </ul>\r\n  </section>\r\n);\r\n\r\nStatisticsList.propTypes = {\r\n  stats: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n};\r\nexport default StatisticsList;\r\n","import styles from \"../FriendList.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Friends = ({ avatar, name, isOnline, id }) => {\r\n  return (\r\n    <li className={styles.friendsList} key={id}>\r\n      <span className={isOnline ? styles.online : styles.offline}>\r\n        {isOnline}\r\n      </span>\r\n      <img className={styles.friendsAvatar} src={avatar} alt={name} />\r\n      <p className={styles.friendsName}>{name}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nFriends.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  isOnline: PropTypes.bool.isRequired,\r\n  id: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Friends;\r\n","import Friends from \"./FriendListItem/FriendListItem\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FriendList = ({ friends }) => (\r\n  <ul>\r\n    {friends.map((friend) => (\r\n      <Friends key={friend.id} {...friend} />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(PropTypes.object),\r\n};\r\nFriendList.defaultProps = {\r\n  avatar: \"https://image.flaticon.com/icons/png/512/42/42901.png\",\r\n};\r\n\r\nexport default FriendList;\r\n","import styles from \"../TransactionHistory.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Transactions = ({ currency, amount, type, id }) => {\r\n  return (\r\n    <tbody>\r\n      <tr key={id} className={styles.transactionHystoryTable}>\r\n        <td>{type}</td>\r\n        <td>{amount}</td>\r\n        <td>{currency}</td>\r\n      </tr>\r\n    </tbody>\r\n  );\r\n};\r\n\r\nTransactions.propTypes = {\r\n  currency: PropTypes.string.isRequired,\r\n  amount: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Transactions;\r\n","import Transaction from \"./TransactionHistoryItem/TransactionHistoryItem\";\r\nimport styles from \"./TransactionHistory.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TransactionHystory = ({ items }) => (\r\n  <table className={styles.transactionTable}>\r\n    <thead className={styles.transactionThead}>\r\n      <tr>\r\n        <th>Type</th>\r\n        <th>Amount</th>\r\n        <th>Currency</th>\r\n      </tr>\r\n    </thead>\r\n    {items.map((item) => (\r\n      <Transaction key={item.id} {...item} />\r\n    ))}\r\n  </table>\r\n);\r\n\r\nTransactionHystory.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n\r\nexport default TransactionHystory;\r\n","import React from \"react\";\r\nimport Profile from \"../Profile/Profile\";\r\nimport Statistics from \"../Statistics/Statistics\";\r\nimport FriendList from \"../FriendList/FriendList\";\r\nimport TransactionHistory from \"../TransactionHistory/TransactionHistory\";\r\nimport user from \"../../assets/profile/user.json\";\r\nimport data from \"../../assets/statistics/data.json\";\r\nimport friends from \"../../assets/friendList/friends.json\";\r\nimport transactions from \"../../assets/transactionHistory/transactions.json\";\r\nimport \"./App.module.css\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Profile\r\n        username={user.username}\r\n        tag={user.tag}\r\n        location={user.location}\r\n        avatar={user.avatar}\r\n        stats={user.stats}\r\n      />\r\n      <Statistics title=\"Upload stats\" stats={data} />\r\n      <FriendList friends={friends} />\r\n      <TransactionHistory items={transactions} />\r\n    </>\r\n  );\r\n};\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}